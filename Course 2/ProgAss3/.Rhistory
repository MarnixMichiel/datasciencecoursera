getwd()
hello.world()
install.packages("ggplot2")
install.packages("adegenet")
install.packages("pegas")
install.packages("hierfstat")
install.packages("genetics")
install.packages("ape")
install.packages("phangom")
install.packages("phangorn")
install.packages("adephylo")
install.packages("picante")
yes
plot(cars)
library(adegenet)
?adegenet
?adegenet
getwd()
read.genepop("stickle.gen")
data <- ("stickle.gen")
#getwd()
str(data)
data <- ('stickle.gen')
data <- read.genepop('stickle.gen')
str(data)
data@ind.names
data@pop.names
data@pop
data@ploidy
Hexp <- Hs(data)
sum <- summary(data)
nall <- sum$pop.n.all
barplot(nall, xlab = 'Population', ylab = 'Number of alleles')
library(hierfstat)
?hierfstat
fstat_data <- read.fstat('stickle.dat')
fstat_data <- read.fstat('stickle.gen')
fstat_data <- read.fstat('stickle.dat')
str(fstat_data)
AR <- allelic.richness(fstat_data)
AR
meanAR <- colMeans(AR$Ar)
meanAR <- colMeans(AR$Ar)
meanAR
barplot(meanAR, xlab = 'Population', ylab = 'Mean allelic richness')
pp <- pairwise.fst(data)
pp
write.table(as.matrix(pp), file = 'pairwisefst.txt')
plot(cars)
library(adegenet)
?adegenet
#getwd()
data <- read.genepop('stickle.gen')
str(data)
data@pop
data@ploidy
Hexp <- Hs(data)
sum <- summary(data)
nall <- sum$pop.n.all
barplot(nall, xlab = 'Population', ylab = 'Number of alleles')
library(hierfstat)
?hierfstat
fstat_data <- read.fstat('stickle.dat')
str(fstat_data)
AR <- allelic.richness(fstat_data)
AR
meanAR <- colMeans(AR$Ar)
meanAR
barplot(meanAR, xlab = 'Population', ylab = 'Mean allelic richness')
pp <- pairwise.fst(data)
pp
write.table(as.matrix(pp), file = 'pairwisefst.txt')
dapcstickle <- dapc(data, n.pca = 40, n.da = 5)
dapcstickle
scatter(dapcstickle)
clust <- find.clusters(data, n.pca = 100)
clust
clust <- find.clusters(data, n.pca = 100)
clust
as.data.frame(clust$grp)
table(clust$grp, data$pop)
table(clust$grp, data$pop)
clust <- find.clusters(data, n.pca = 100)
clust
as.data.frame(clust$grp)
table(clust$grp, data$pop)
table.value(table(clust$grp, data$pop))
plot(cars)
set.seed(1)
rnorm(3)
rnorm(3)
set.seed(1)
rnorm(5)
rnorm(5)
set.seed(10-9)
rnorm(5)
set.seed(0.4)
rnorm(5)
set.seed(0.4)
rnorm(5)
set.seed(1)
rpois(5, 2)
?ppois
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
x
plot(x, y)
setwd("~/Downloads/datasciencecoursera/Course 2/ProgAss3")
outcome <- read.csv("data/outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
str(outcome)
?str()
ncol(outcome)
nrow(outcome)
names(outcome)
hist(as.numeric(outcome[, 11]))
head(outcome[, 11])
source('~/.active-rstudio-document')
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R', echo=TRUE)
str(outcome)
states <- outcome[, 7]
unique(states)
"MT" %in% states
"mt" %in% states
"PA" %in% states
if ("PA" %in% states) print(yes)
if ("PA" %in% states) print('yes')
if (!"Pjd" %in% states) print('yes')
?Error
?stop
stop("invalid input")
unique(outcome[, 11])
unique(outcome$State)
length(outcome[outcome$State == "WY"])
length(outcome[, outcome$State == "WY"])
length(outcome[outcome$State == "WY", ])
length(outcome[outcome$State == "TX", ])
length(outcome[outcome$State == "AL", ])
length(outcome[outcome$State == "ee", ])
dim(outcome[outcome$State == "ee", ])
dim(outcome[outcome$State == "TX", ])
dim(outcome[outcome$State == "WY", ])
dim(outcome[outcome$State == "AL", ])
nrow(outcome[outcome$State == "AL", ])
if (FALSE) message('oops')
if (FALSE) message('oops')
if (TRUE) 'YES'
"Attack" %in% c("attack", "fda")
oc <- 23
str(oc)
names(outcome)
?paste
outcome$Heart.Attack
outcome$Mortality.Heart.Attack
outcome$Hospital.30.Day.Death.Mortality.Heart.Attack
?max
best <- outcome[which.max(outcome[, oc])]
?which.max
best <- outcome[which.max(outcome[oc, ])]
warnings()
which.max(outcome[, 23])
outcome[which.max(outcome[, 23])]
outcome[, which.max(outcome[, 23])]
outcome[which.max(outcome[, 23]), ]
outcome[which.max(outcome[, 23]), 2]
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R', echo=TRUE)
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
best("TX", "heart attack")
dim(outcome[which.max(outcome[, 23]), ])
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
dim(best("TX", "heart attack"))
best("TX", "heart failure")
best("TX", "heart failure")[2]
best("BB", "heart attack")
best("NY", "hert attack")
best("MD", "pneumonia")
best("MD", "pneumonia")[2]
dim(best("MD", "pneumonia"))
best("MD", "pneumonia")[7]
?subset
subset(outcome, outcome[11, ] == max(outcome[11, ]))
subset(outcome, as.numeric(outcome[11, ]) == max(outcome[11, ]))
subset(as.numeric(outcome), outcome[11, ] == max(outcome[11, ]))
max(outcome[, 11])
subset(as.numeric(outcome), outcome[, 11] == max(outcome[, 11]))
subset(outcome, outcome[, 11] == max(outcome[, 11]))
bst <- subset(outcome, outcome[, 11] == max(outcome[, 11]))
unique(bst[, 11])
bst <- subset(outcome, outcome[, 11] == max(as.numeric(outcome[, 11])))
bst <- subset(outcome, as.numeric(outcome[, 11]) == max(as.numeric(outcome[, 11])))
View(bst)
max(as.numeric(outcome[, 11]))
?max
max(as.numeric(outcome[, 11]), na.rm = TRUE)
bst <- subset(outcome, as.numeric(outcome[, 11]) == max(as.numeric(outcome[, 11]), na.rm = TRUE))
bst
bst[11]
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
bst <- best("TX", "heart attack")
bst
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
best("TX", "heart attack")
best("TX", "heart failure")
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
best("TX", "heart failure")
oc <- 11, "hey"
oc <- 11; "hey"
?if
fd
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
best("TX", "heart failure")
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
best("TX", "heart failure")
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
best("TX", "heart failure")
outcome[11, 2]
outcome[17, 2]
best("MD", "heart attack")
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
best("MD", "heart attack")
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
best("TX", "heart attack")
best("TX", "heart attack")[, 2]
best("TX", "heart attack")[, 7]
best("TX", "heart attack")[, 11]
dim(best("TX", "heart attack"))
unique(as.numeric(outcome[, 11]))
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
dim(best("TX", "heart attack"))
best("TX", "heart attack")[, 11]
best("TX", "heart attack")[, 2]
outcome[outcome$Hospital.Name == "CYPRESS FAIRBANKS MEDICAL CENTER", 11]
outcome[outcome$Hospital.Name == "CYPRESS FAIRBANKS MEDICAL CENTER", ]$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack
outcome[outcome$Hospital.Name == "CYPRESS FAIRBANKS MEDICAL CENTER", ]$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure
max(outcome[outcome$State == "TX", 11], na.rm = TRUE)
max(as.numeric(outcome[outcome$State == "TX", 11]), na.rm = TRUE)
max(as.numeric(outcome[outcome$State == "TX", 17]), na.rm = TRUE)
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
best("TX", "heart attack")
best("MD", "pneumonia")
best("MD", "")
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
best("MD", "pneumonia")
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
best("TX", "heart attack")
best("MD", "pneumonia")
?order
out <- outcome[, c(2, 7, oc)]
names(out)
names(out) <- c('hospital', 'state', 'outcome')
names(out)
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
best("TX", "heart attack")
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
best("TX", "heart attack")
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
best("TX", "heart attack")
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
best("TX", "heart attack")
?subset
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
best("TX", "heart attack")
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
best("TX", "heart attack")
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
best("TX", "heart attack")
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
best("TX", "heart attack")
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
bst <- best("TX", "heart attack")
dim(bst)
unique(bst$outcome)
unique(as.numeric(bst$outcome))
?as.numeric
?complete.cases
b <- na.omit(bst)
b <- complete.cases(bst)
typeof(bst[3])
typeof(bst[3][1])
typeof(bst[3][1][1])
typeof(bst[1, 3])
bst[1, 3]
eval(bst[1, 3])
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
bst <- best("TX", "heart attack")
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
bst <- best("TX", "heart attack")
bst
?order
allStates <- unique(states)
allStates[order(allStates)]
allStates[order(-allStates)]
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
bst <- best("TX", "heart attack")
bst
bst <- best("TX", "heart failure")
bst
bst <- best("MD", "heart attack")
bst
bst <- best("MD", "pneumonia")
bst
bst <- best("MBD", "pneumonia")
bst <- best("MD", "pnumonia")
out[out$hospital=="FORT DUNCAN MEDICAL CENTER",]
names(out)
out <- outcome[, c(2, 7, 11, 17, 23)]
names(out) <- c('hospital', 'state', 'out1', 'out2', 'out3')
out[out$hospital=="FORT DUNCAN MEDICAL CENTER",]
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
bst <- best("TX", "heart failure")
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
bst <- best("TX", "heart failure")
bst
as.numeric('heart failure')
as.numeric('Not Available')
as.numeric('NA')
as.numeric("Not Available")
out2 <- na.omit(out)
out2$out2 <- as.numeric(out2$out2)
out2 <- na.omit(out2)
out2 <- subset(out2, out2 == min(out2, na.rm = TRUE))
out2
out2 <- na.omit(out)
outs <- na.omit(out[out$state == 'TX', ])
out2 <- na.omit(out[out$state == 'TX', ])
out2$out2 <- as.numeric(out2$out2)
out2 <- na.omit(out2)
out2 <- subset(out2, out2 == min(out2, na.rm = TRUE))
out2
out2 <- na.omit(out[out$state == 'TX', ])
out2$out2 <- as.numeric(out2$out2)
out2 <- subset(out2, out2 == min(out2, na.rm = TRUE))
out2
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
bst <- best('TX', 'heart failure')
bst
out2 <- out[out$state == 'TX', ]
out2$out2 <- as.numeric(out2$out2)
out2 <- subset(out2, out2 == min(out2, na.rm = TRUE))
out2
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
best('TX', 'heart failure')
order(bst)
order(bst[1])
bst[order(bst[1])]
bst[order(bst[1]), ]
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
best('TX', 'heart failure')
as.numeric(10.0)
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
best('TX', 'heart failure')
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
best('TX', 'heart failure')
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
best('TX', 'heart failure')
outcome[outcome[, 2] == "CHILDREN'S HOSPITAL -SCOTT & WHITE HEALTHCARE", ]
outcome[outcome[, 2] == "CHILDREN'S HOSPITAL -SCOTT & WHITE HEALTHCARE", 11]
outcome[outcome[, 2] == "CHILDREN'S HOSPITAL -SCOTT & WHITE HEALTHCARE", 17]
data <- read.csv("data/outcome-of-care-measures.csv")
allStates <- unique(data[, 7])
outcomes <- c("heart attack"=11, "heart failure"=17, "pneumonia"=23)
state <- 'TX'
outcome <- 'heart failure'
if (!state %in% allStates) stop("invalid state")
if (!outcome %in% names(outcomes)) stop("invalid outcome")
data <- data[, c(2, 7, outcomes[outcome])]
names(data) <- c('hospital', 'state', 'outcome')
hospitals <- data[data$state == state, ]
unique(hospitals$state)
hospitals$outcome <- as.numeric(hospitals$outcome)
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
best('TX', 'heart failure')
data <- read.csv("data/outcome-of-care-measures.csv", colClasses = "character")
allStates <- unique(data[, 7])
outcomes <- c("heart attack"=11, "heart failure"=17, "pneumonia"=23)
## Check that state and outcome are valid
if (!state %in% allStates) stop("invalid state")
if (!outcome %in% names(outcomes)) stop("invalid outcome")
data <- data[, c(2, 7, outcomes[outcome])]
names(data) <- c('hospital', 'state', 'outcome')
hospitals <- data[data$state == state, ]
hospitals$outcome <- as.numeric(hospitals$outcome)
hospitals <- hospitals[order(bst[1]), ]
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
best('TX', 'heart failure')
hospitals <- data[data$state == state, ]
hospitals$outcome <- as.numeric(hospitals$outcome)
hospitals <- hospitals[order(hospitals[1, ]), ]
hospitals <- data[data$state == state, ]
hospitals$outcome <- as.numeric(hospitals$outcome)
hospitals <- hospitals[order(hospitals$hospital), ]
bst <- subset(hospitals, outcome == min(outcome, na.rm = TRUE))
bst
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
best('TX', 'heart failure')
best('TX', 'heart failur')
best('Tdd', 'heart failure')
best("TX", "heart attack")
best("MD", "heart attack")
best("MD", "pneumonia")
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/rankhospital.R')
rankhospital('TX', 'heart failure')
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/rankhospital.R')
rankhospital('TX', 'heart failure')
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/rankhospital.R')
rankhospital('TX', 'heart failure')
rankhospital('TX', 'heart failure', 1:4)
rankhospital('TX', 'heart failure', "best")
rankhospital('TX', 'heart failure', "best")[1]
b <- c("best"=1)
b[2]
num <- 2
num <- b[num]
num
outs[-1, ]
outs[1, ]
outs[0, ]
?head
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/rankhospital.R')
rankhospital('TX', 'heart failure', "best")
rankhospital('TX', 'heart failure', "worst")
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/rankhospital.R')
rankhospital('TX', 'heart failure', "worst")
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/rankhospital.R')
rankhospital('TX', 'heart failure', "worst")
rankhospital("MD", "heart attack", "worst")
rankhospital("TX", "heart failure", 4)
rankhospital("MN", "heart attack", 5000)
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/rankhospital.R')
rankhospital("MN", "heart attack", 5000)
rankhospital("MD", "heart attack", "worst")
rankhospital("TX", "heart failure", 4)
best("TX", "heart attack")
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/best.R')
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
?split
ldf <- split(data, data$state)
opl <- lapply(ldf, rankhospital)
opl <- lapply(ldf, rankhospital, outcome = "heart attack", num = 20)
opl <- lapply(ldf, rankhospital, state = ldf$state, outcome = "heart attack", num = 20)
?lapply
opl <- lapply(ldf, rankhospital, state = state, outcome = "heart attack", num = 20)
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/rankall.R')
opl <- lapply(ldf, rankdata, state = state, outcome = "heart attack", num = 20)
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/rankall.R')
opl <- lapply(ldf, rankdata, state = state, outcome = "heart attack", num = 20)
opl <- lapply(ldf, rankdata, state = ldf$state, outcome = "heart attack", num = 20)
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/rankall.R')
opl <- lapply(ldf, rankdata, outcome = "heart attack", num = 20)
unlist(opl)
result <- data.frame(hospital = unlist(opl), states = names(opl))
View(result)
head(result)
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/rankall.R')
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
head(rankall("heart attack", 20), 10)
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/rankall.R')
head(rankall("heart attack", 20), 10)
tail(rankall("heart failure"), 10)
tail(rankall("pneumonia", "worst"), 3)
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("heart attack", 4)
View(r)
as.character(subset(r, state == "HI")$hospital)
subset(r, state == "HI")$hospital
subset(r, states == "HI")$hospital
as.character(subset(r, states == "HI")$hospital)
source('~/Downloads/datasciencecoursera/Course 2/ProgAss3/rankall.R')
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
